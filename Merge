#include <iostream> 
#include <vector> 
#include <cstdlib> 
#include <ctime> 
#include <algorithm>
#include <time.h>
using namespace std;
void merge(int *arr1, int *arr2, int *arr3);
void printArr(int *dockArr, int size);
void bubbleSort(int *second);

int main()
{
	srand((unsigned)time(0));

	int arr1[10] = {};
	int arr2[10] = {};
	
	int sizeArr1 = sizeof(arr1) / sizeof(arr1[0]);
	int sizeArr2 = sizeof(arr2) / sizeof(arr2[0]);
	int arr3[20] = {};
	for (int i = 0; i < sizeArr1; i++){
		int randNum = (rand() % 100) + 1;
		arr1[i] = randNum;
		randNum = (rand() % 100) + 1;
		arr2[i] = randNum;
	}
	bubbleSort(arr1);
	bubbleSort(arr2);
	printArr(arr1, 10);
	cout << endl;
	printArr(arr2, 10);
	cout << endl;
	merge(arr1,arr2,arr3);
	getchar();
	getchar();
	getchar();
	getchar();
	getchar();
	getchar();
	return 0;
}
int ith = 0;
int jth = 0;
int kth = 0;
int smaller;

void merge(int *arr1,int *arr2, int *arr3){
	for (int i = 0; i < 20; i++){
		if (arr1[ith] > arr2[jth]){
			smaller = arr2[jth];
			if (jth < 9)
				jth++;
			else
				break;
		}
		else{
			smaller = arr1[ith];
			if (ith < 9)
				ith++;
			else
				break;
		}

	arr3[kth] = smaller;
	kth++;
	//sort(arr1, arr2, arr3);	
	}
	arr3[kth] = smaller;
	kth++;
	
	if (ith == 9)
	{
		while (jth <= 9)
		{
			arr3[kth] = arr2[jth];
			kth++;
			jth++;
		}
	}
	else if (jth == 9)
	{
		while (ith <= 9)
		{
			arr3[kth] = arr1[ith];
			kth++;
			ith++;
		}
	}
	printArr(arr3, 20);

}
void printArr(int *dockArr,int size){
	
	for (int i = 0; i < size; i++){
		cout << "The element of array at position " << i << " is " << dockArr[i] << endl;
	}
}
void bubbleSort(int *second){
	for (auto i = 0; i < 10; i++){
		for (auto j = 0; j < 9 - i; j++){
			if (second[j]>second[j + 1]){
				swap(second[j], second[j + 1]);
			}
		}
	}
}
