#include <iostream> 
#include <vector> 
#include <cstdlib> 
#include <ctime> 
#include <algorithm>
#include <time.h>
using namespace std;
void merge(vector<int> arr1, vector<int> arr2);
void printArr(vector<int> dockArr, int size);
vector<int> mergeSort(int a, int b);
vector<int> vect1;
int main()
{
	srand((unsigned)time(0));

	
		
	for (int i = 0; i < 10; i++){
		int randNum = (rand() % 100) + 1;
		vect1.push_back(9-i);
	}
	int sizeArr1 = vect1.size();
	printArr(vect1, sizeArr1);
	cout << endl;
	//*****************************************************************************************************8
	//printArr(mergeSort(0, (sizeArr1-1)),sizeArr1);
	getchar();
	getchar();
	getchar();
	getchar();
	getchar();
	getchar();
	return 0;
}

vector<int> mergeSort(int a, int b){
	
	vector<int> dock;
	do {
		dock.push_back(vect1[a]);
		a++;
	}while (a != b);

	if (a == b){
		return dock;
	}
	merge(mergeSort(a,b/2), mergeSort((b/2)+1,b));
}




int ith = 0;
int jth = 0;
int kth = 0;
int smaller;

void merge(vector<int> arr1, int s, int m, int e){
	ith = s;
	jth = m + 1;
	int size1 = m;
	int size2 = arr1.size() - 1;
	vector<int> arr3;
	for (int i = 0; i < arr1.size(); i++){
		if (arr1[ith] > arr1[jth]){
			smaller = arr1[jth];
			if (jth < size2)
				jth++;
			else
				break;
		}
		else{
			smaller = arr1[ith];
			if (ith < size1)
				ith++;
			else
				break;
		}

	arr3.push_back(smaller);
	kth++;
	//sort(arr1, arr2, arr3);	
	}
	arr3.push_back(smaller);
	kth++;
	
	if (ith == size1)
	{
		while (jth <= size2)
		{
			arr3.push_back(arr1[jth]);
			kth++;
			jth++;
		}
	}
	else if (jth == size2)
	{
		while (ith <= size1)
		{
			arr3.push_back(arr1[ith]);
			kth++;
			ith++;
		}
	}
	
	arr1.swap(arr3);
	printArr(arr1, size2+1);

}

void printArr(vector<int> dockArr,int size){
	
	for (int i = 0; i < size; i++){
		cout << "The element of array at position " << i << " is " << dockArr[i] << endl;
	}
}
